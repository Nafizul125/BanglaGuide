"""
Django settings for banglaguide project.

Generated by 'django-admin startproject' using Django 5.0.7.  # This might vary based on your Django version.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-your-secret-key-here'  # Change this to a secure random key later

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get("DEBUG", "True").lower() == "true"

# Comma separated hostnames in ALLOWED_HOSTS env var, e.g. "example.com,.example.com"
_hosts_env = os.environ.get("ALLOWED_HOSTS", "")
ALLOWED_HOSTS = [h.strip() for h in _hosts_env.split(",") if h.strip()] or []


# Application definition

INSTALLED_APPS = [
    # WhiteNoise optional app helper (keeps runserver from serving static itself when using WhiteNoise)
    'whitenoise.runserver_nostatic',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'accounts',  # Your accounts app
    'tourism',   # Tourism app
    'hotels',    # Hotels app
    'guides',    # Guides app
    'cars',      # Cars app
    'bookings',  # Bookings app
    'chat',      # Chat app
    'tailwind',
    'theme',  # Add this for Tailwind
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    # WhiteNoise for serving static files in production
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'banglaguide.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],  # Project-wide templates folder
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'banglaguide.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'BanglaGuide',  # Your database name
        'USER': 'postgres',     # Your PostgreSQL user
        'PASSWORD': '12345',    # Your password (change to secure one in production)
        'HOST': 'localhost',
        'PORT': '5432',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


"""Static files (CSS, JavaScript, Images) configuration.
In production (e.g. Render) Django's collectstatic will gather all app static
assets into STATIC_ROOT. WhiteNoise then serves them.
"""

STATIC_URL = '/static/'

# Directory where collectstatic puts compiled assets
STATIC_ROOT = BASE_DIR / 'staticfiles'

# Additional directories Django will search for static files (besides each app's static/)
STATICFILES_DIRS = [
    # Tailwind build output (adjust if your compiled CSS output differs)
    # The django-tailwind default places built assets inside the theme app's static directory.
    # If you later configure a distinct build dir, add it here.
]

# Use compressed + hashed file names for better caching in production
if not DEBUG:
    STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Media files for uploads
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Custom User Model
AUTH_USER_MODEL = 'accounts.CustomUser'  # Point to our custom user model

# Login Redirect
LOGIN_REDIRECT_URL = 'homepage'  # After login, redirect to homepage
LOGIN_URL = 'login'  # If not logged in, redirect to login page

# Weather API Key (sign up at openweathermap.org)
WEATHER_API_KEY = 'your_openweathermap_api_key_here'

# Tailwind Configuration
TAILWIND_APP_NAME = 'theme'  # Tailwind theme app (add 'theme' later)
INTERNAL_IPS = [
    "127.0.0.1",
]
NPM_BIN_PATH = 'C:/Program Files/nodejs/npm.cmd'  # Adjust for your OS (use 'which npm' on macOS/Linux)

# Allow override of database credentials / secret key via environment in production
SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY', SECRET_KEY)

# If deploying without Postgres locally, you can provide a DATABASE_URL env var and parse it here later.